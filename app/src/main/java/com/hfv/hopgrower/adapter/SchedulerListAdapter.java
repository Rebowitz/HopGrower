/** * */package com.hfv.hopgrower.adapter;import android.content.Context;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ArrayAdapter;import android.widget.TextView;import com.hfv.hopgrower.R;import com.hfv.hopgrower.screens.SchedulerEventFragment;import com.hfv.hopgrower.screens.SchedulerEventFragment.SchedulerRec;import com.hfv.hopgrower.sqlite.myhops.Scheduler;import java.util.ArrayList;/** * @author Robert B. Andrews *         RBA Internet Services, Inc. Strasburg, Virginia *         Copyright 2014  All Rights Reserved */public class SchedulerListAdapter extends ArrayAdapter<SchedulerEventFragment.SchedulerRec> {    private Context context;    private ArrayList<Scheduler> schedList = new ArrayList<Scheduler>();    public SchedulerListAdapter(Context context, ArrayList<Scheduler> schedList) {        super(context, 0);        this.context = context;        this.schedList = schedList;    }    @Override    public View getView(int position, View convertView, ViewGroup parent) {//		SchedulerEventFragment.SchedulerRec  theRec = getItem(position);        Scheduler theRec = schedList.get(position);        String[] eInts = new String[4];        eInts[0] = "Daily";        eInts[1] = "Weekly";        eInts[2] = "Monthly";        eInts[3] = "No Records";        LayoutInflater inflater = (LayoutInflater) context                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);        Log.d("HopGrower", "SchedulerListAdapter position: " + position);        View row;//		row = LayoutInflater.from(getContext()).inflate(R.layout.sched_row_view, parent, false);        row = inflater.inflate(R.layout.sched_row_view, parent, false);        TextView schedId = (TextView) row.findViewById(R.id.schedId);        TextView interval = (TextView) row.findViewById(R.id.interval);        TextView location = (TextView) row.findViewById(R.id.location);        TextView event = (TextView) row.findViewById(R.id.event);        TextView event_other = (TextView) row.findViewById(R.id.event_other);        TextView description = (TextView) row.findViewById(R.id.scheddesc);        TextView recurrRec = (TextView) row.findViewById(R.id.recurrrec);        //checkbox has a tag,value set        //tag is the primary key for the rec in the database        //value is the recurring record flag used to prompt        //if user will delete just the record or the entire reccurring series.        Log.d("HopGrower", "scheduler id is: " + theRec.getId());        Long tempVal = theRec.getId();        schedId.setText(tempVal.toString());        tempVal = theRec.getInterval().longValue();        String tempString = eInts[tempVal.intValue()];        interval.setText(tempString);        location.setText(theRec.getLocation());        event.setText(theRec.getEvent());        event_other.setText(theRec.getEventOther());        description.setText(theRec.getDescription());        tempVal = theRec.getRecurrRec().longValue();        recurrRec.setText(tempVal.toString());        return row;    }    @Override    public int getCount() {        return schedList.size();//		return 1;    }    @Override    public SchedulerRec getItem(int position) {        return null;    }    @Override    public long getItemId(int position) {        return 0;    }    @Override    public boolean areAllItemsEnabled() {        return false;    }    @Override    public boolean isEnabled(int position) {        return true;    }}