/** * */package com.hfv.hopgrower.dbadapter;import android.content.Context;import android.database.SQLException;import android.database.sqlite.SQLiteDatabase;import com.hfv.hopgrower.dbhelper.MyHopsDatabaseHelper;import com.hfv.hopgrower.sqlite.DaoMaster.DevOpenHelper;import com.hfv.hopgrower.sqlite.myhops.GrowLogDao;import com.hfv.hopgrower.sqlite.myhops.MHDaoMaster;import com.hfv.hopgrower.sqlite.myhops.MHDaoSession;import com.hfv.hopgrower.sqlite.myhops.MyHopsDao;import com.hfv.hopgrower.sqlite.myhops.NotesDao;import com.hfv.hopgrower.sqlite.myhops.SchedulerDao;import java.io.IOException;/** * @author Robert B. Andrews *         RBA Internet Services, Inc. Strasburg, Virginia *         Copyright 2014  All Rights Reserved */public class MyHopsDatabaseAdapter {    private static String DB_PATH = "/data/data/com.hfv.hopgrower/databases/";    private static String DB_NAME = "my_hops";    private SQLiteDatabase my_hops;    private MyHopsDatabaseHelper mDbHelper;    public DevOpenHelper mh_database_helper_obj;    public MHDaoMaster mhDaoMaster;    public MHDaoSession mhDaoSession;    private final Context adapterContext;    public MyHopsDatabaseAdapter(Context context) {        this.adapterContext = context;    }    public MyHopsDatabaseAdapter open() throws SQLException {        mDbHelper = new MyHopsDatabaseHelper(adapterContext);        try {            mDbHelper.createDataBase();        } catch (IOException ioe) {            throw new Error("Unable to create database");        }        my_hops = mDbHelper.getDatabase();        //	mh_database_helper_obj =  new DevOpenHelper(adapterContext,"my_hops", null);        //	mh_database_helper_obj =  new DevOpenHelper(singleton.context,"my_hops", null);        //	my_hops= mh_database_helper_obj.getWritableDatabase();        mhDaoMaster = new MHDaoMaster(my_hops);        mhDaoSession = mhDaoMaster.newSession();        return this;    }    public MyHopsDao getMyHopsDaoSession() {        MyHopsDao myhopsDao = mhDaoSession.getMyHopsDao();        return myhopsDao;    }    public GrowLogDao getGrowLogDaoSession() {        GrowLogDao growlogDao = mhDaoSession.getGrowLogDao();        return growlogDao;    }    public SchedulerDao getSchedulerDaoSession() {        SchedulerDao schedulerDao = mhDaoSession.getSchedulerDao();        return schedulerDao;    }    public NotesDao getNotesDaoSession() {        NotesDao notesDao = mhDaoSession.getNotesDao();        return notesDao;    }    public void closeDaoSession() {        mhDaoSession.clear();        my_hops.close();    }}