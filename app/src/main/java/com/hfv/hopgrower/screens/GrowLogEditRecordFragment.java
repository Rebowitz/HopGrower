/** * */package com.hfv.hopgrower.screens;import android.annotation.SuppressLint;import android.content.Context;import android.os.Bundle;import android.support.v4.app.Fragment;import android.util.Log;import android.util.SparseIntArray;import android.view.Gravity;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.AdapterView.OnItemSelectedListener;import android.widget.EditText;import android.widget.LinearLayout;import android.widget.Spinner;import android.widget.TextView;import android.widget.Toast;import com.hfv.hopgrower.R;import com.hfv.hopgrower.dbadapter.MyHopsDatabaseAdapter;import com.hfv.hopgrower.special.HopGrowerToast;import com.hfv.hopgrower.sqlite.myhops.GrowLog;import com.hfv.hopgrower.sqlite.myhops.GrowLogDao;import java.text.DateFormat;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.Date;import java.util.HashMap;import java.util.Map;import java.util.Map.Entry;/** * @author Robert B. Andrews *         RBA Internet Services, Inc. Strasburg, Virginia *         Copyright 2014  All Rights Reserved */@SuppressLint("WrongViewCast")public class GrowLogEditRecordFragment extends Fragment {    long mhID = 0;    View view = new View(getActivity());    int spinnerPosition = 0;    Boolean inhibit_spinner = true;    int currentLayout = 0;    LinearLayout llcatview = null;    Spinner spinner1;    Spinner spinner2;    EditText textBox;    Context mCtx;    String currentDateTimeString;/*        public static GrowLogEditRecordFragment newInstance(Long index) {    	GrowLogEditRecordFragment f = new GrowLogEditRecordFragment();		Log.d("HopGrower","GrowLogEditRecordFragment.newInstance with index: " + index.toString());		        // Supply index input as an argument.        Bundle args = new Bundle();        args.putLong("dbMHId", index);        f.setArguments(args);        return f;    }*/    public GrowLogEditRecordFragment() {    }    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        mCtx = getActivity().getApplicationContext();        Bundle args = getArguments();        mhID = args.getLong("dbMHId");        view = inflater.inflate(R.layout.grow_log_create, container, false);        currentDateTimeString = DateFormat.getDateTimeInstance().format(new Date());        TextView dateString = (TextView) view.findViewById(R.id.growlog_date);        dateString.setText(currentDateTimeString);        spinner1 = (Spinner) view.findViewById(R.id.growlog_catspin);        spinner1.setOnItemSelectedListener(new OnItemSelectedListener() {            public void onItemSelected(AdapterView<?> parentView,                                       View selectedItemView, int position, long id) {                // Object item = parentView.getItemAtPosition(position);                String[] llids = {"nuttin", "gl_1", "gl_2", "gl_3", "gl_4", "gl_5", "gl_6", "gl_7", "gl_8", "gl_9", "gl_10", "gl_11"};                SparseIntArray llidsMap = new SparseIntArray();                llidsMap.put(0, 0);                llidsMap.put(1, R.id.gl_1);                llidsMap.put(2, R.id.gl_2);                llidsMap.put(3, R.id.gl_3);                llidsMap.put(4, R.id.gl_4);                llidsMap.put(5, R.id.gl_5);                llidsMap.put(6, R.id.gl_6);                llidsMap.put(7, R.id.gl_7);                llidsMap.put(8, R.id.gl_8);                llidsMap.put(9, R.id.gl_9);                llidsMap.put(10, R.id.gl_10);                llidsMap.put(11, R.id.gl_11);                spinnerPosition = spinner1.getSelectedItemPosition();                String viewId = "R.id." + llids[spinnerPosition];                Log.d("HopGrower", "The spinner selected item is: " + spinnerPosition);                Log.d("HopGrower", "The layout id is: " + viewId);                if (inhibit_spinner) {                    inhibit_spinner = false;                } else if (spinnerPosition > 0) {                    if (llcatview != null && currentLayout != spinnerPosition) {                        llcatview.setVisibility(View.GONE);                    }                    llcatview = (LinearLayout) view.findViewById(llidsMap.get(spinnerPosition));                    llcatview.setVisibility(View.VISIBLE);                    currentLayout = spinnerPosition;                    //this gets the spinner in the just exposed linearlayout                    spinner2 = (Spinner) llcatview.getChildAt(1);                    textBox = (EditText) llcatview.getChildAt(2);                    textBox.setHorizontallyScrolling(false);                    textBox.setLines(5);                    textBox.setGravity(Gravity.TOP);//	            InputMethodManager ipmm = (InputMethodManager) getActivity().getApplicationContext().getSystemService(Context.INPUT_METHOD_SERVICE);//S	            ipmm.hideSoftInputFromWindow(textBox.getWindowToken(),0);//	            String spin2Text = spinner2.getSelectedItem().toString();//	            Log.d("HopGrower","Spinner 2- text is: " + spin2Text);                }            }            public void onNothingSelected(AdapterView<?> arg0) {// do nothing            }        });        return view;    }    @SuppressLint("SimpleDateFormat")    public String saveGrowLogRec() {        String returnvalue = "saved";        //need code to check that the screen has data that will form a valid record        //spinner 1 and 2 must both have selections        //if spinner 2 says other, then the text box must have data        //throw toast window if error.        //call dbase routine if data present        //check the edit mode textview, if edit update the record        TextView glDate = (TextView) view.findViewById(R.id.growlog_date);        String datestring = glDate.getText().toString();        String category = spinner1.getSelectedItem().toString();        String item = spinner2.getSelectedItem().toString();        String description = textBox.getText().toString();        Log.d("HopGrower", "-----------------------------------------------------");        Log.d("HopGrower", "datestring retrieved from textview is: " + datestring);        Log.d("HopGrower", "category retrieved from spinner1 is: " + category);        Log.d("HopGrower", "type retrieved from spinner2 is: " + item);        Log.d("HopGrower", "description retrieved from textbox is: " + description);        Log.d("HopGrower", "-----------------------------------------------------");        if (category.equals("select")) {            //throw toast here            CharSequence text = "You must select a category.";            HopGrowerToast hgToast = new HopGrowerToast(mCtx, text, 6);            Toast theToast = hgToast.getToast();            theToast.show();            returnvalue = "notsaved";            return returnvalue;        }        //item may not be visible, so we cant put the string initialization of item before the above if statement.        //once we are sure a category has been selected in spinner 1, we then know spinner 2 is visible and we can        //test for a value        if (item.equals("select")) {            //throw toast here            CharSequence text = "You must select a " + category + " type.";            HopGrowerToast hgToast = new HopGrowerToast(mCtx, text, 6);            Toast theToast = hgToast.getToast();            theToast.show();            returnvalue = "notsaved";            return returnvalue;        }        if (description == null || description.trim().equals("")) {            //throw toast saying you should enter something            CharSequence text = "You must enter data or a description in the text field.";            HopGrowerToast hgToast = new HopGrowerToast(mCtx, text, 6);            Toast theToast = hgToast.getToast();            theToast.show();            returnvalue = "notsaved";            return returnvalue;        }        MyHopsDatabaseAdapter mDbAdapter = new MyHopsDatabaseAdapter(mCtx);        mDbAdapter.open();        GrowLogDao glDao = mDbAdapter.getGrowLogDaoSession();        GrowLog currentRec = new GrowLog();        SimpleDateFormat sdf = new SimpleDateFormat("MMM dd, yyyy HH:mm:ss a");        Date date1 = null;        try {            date1 = sdf.parse(datestring);        } catch (ParseException e) {            // TODO Auto-generated catch block            e.printStackTrace();        }//        currentRec.setId(0);        currentRec.setMhID(mhID);        currentRec.setLogDate(date1);        currentRec.setCategory(category);        currentRec.setItem(item);        currentRec.setDescription(description);        glDao.insert(currentRec);        return returnvalue;    }    @SuppressLint("WrongViewCast")    public void setData(HashMap<String, String> theData) {        HashMap<String, String> dataToLoad = theData;        //this fragment was instantiated before this call        //so we access the spinners and textview and set them accordingly        //then the activity loads it into a fragment transaction, and voila        //the edit window        //merchantId = this.spinner1.ElementAt (e.Position).MerchantId;        Map<String, String> map = dataToLoad;        for (Entry<String, String> entry : map.entrySet()) {            Log.d("HopGrower", entry.getKey() + " : " + entry.getValue());        }        TextView dateString = (TextView) view.findViewById(R.id.growlog_date);        TextView glId = (TextView) view.findViewById(R.id.glID);        TextView mhId = (TextView) view.findViewById(R.id.mhID);        Spinner spinner1 = (Spinner) view.findViewById(R.id.growcat);        Spinner spinner2 = (Spinner) view.findViewById(R.id.growtype);        for (int i = 0; i < spinner1.getCount(); i++) {            if (spinner1.getItemAtPosition(i).equals(dataToLoad.get("growcat"))) {                spinner1.setSelection(i);            }        }        for (int i = 0; i < spinner2.getCount(); i++) {            if (spinner2.getItemAtPosition(i).equals(dataToLoad.get("growtype"))) {                spinner2.setSelection(i);            }        }        textBox.setText(dataToLoad.get("growdesc"));        dateString.setText(dataToLoad.get("growdate"));        glId.setText(dataToLoad.get("glID"));        mhId.setText(Long.toString(mhID));    }}