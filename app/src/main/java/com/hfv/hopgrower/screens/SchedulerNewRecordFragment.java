/** * */package com.hfv.hopgrower.screens;/** * @author Robert B. Andrews * RBA Internet Services, Inc. Strasburg, Virginia * Copyright 2014  All Rights Reserved */import android.content.Context;import android.content.res.Resources;import android.graphics.Rect;import android.os.Bundle;import android.support.v4.app.DialogFragment;import android.util.AttributeSet;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.view.Window;import android.widget.ArrayAdapter;import android.widget.Spinner;import android.widget.TextView;import com.hfv.hopgrower.R;import java.util.ArrayList;import java.util.Arrays;import java.util.Calendar;import java.util.List;public class SchedulerNewRecordFragment extends DialogFragment {    static final int DEFAULTDATESELECTOR_ID = 0;    static final int DEFAULTDATESELECTOR_WITHLIMIT_ID = 6;    static final int ALTERNATIVEDATESELECTOR_ID = 1;    static final int CUSTOMDATESELECTOR_ID = 2;    static final int MONTHYEARDATESELECTOR_ID = 3;    static final int TIMESELECTOR_ID = 4;    static final int TIMESELECTOR_WITHLIMIT_ID = 7;    static final int DATETIMESELECTOR_ID = 5;    Context mCtx;    private TextView dateText;    AttributeSet attr;    ArrayAdapter<String> adapter1;    ArrayAdapter<String> adapter2;    Spinner yearSpin1;    Spinner monthSpin1;    Spinner daySpin1;    Spinner yearSpin2;    Spinner monthSpin2;    Spinner daySpin2;    @SuppressWarnings({"rawtypes", "unchecked"})    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        View rootView = inflater.inflate(R.layout.scheduler_newrec_frag, container,                false);        //      getDialog().requestWindowFeature(Window.FEATURE_NO_TITLE);        Rect displayRectangle = new Rect();        Window window = getActivity().getWindow();        window.getDecorView().getWindowVisibleDisplayFrame(displayRectangle);//       rootView.setMinimumHeight((int)(displayRectangle.height() * 0.7f));        rootView.setMinimumWidth((int) (displayRectangle.width() * 0.7f));        // Do something else        mCtx = getActivity().getApplicationContext();        Calendar cal = Calendar.getInstance();        int year = cal.get(Calendar.YEAR);        int month = cal.get(Calendar.MONTH);        int day = cal.get(Calendar.DAY_OF_MONTH);        Spinner yearSpin1 = (Spinner) rootView.findViewById(R.id.sched_start_year);        Spinner monthSpin1 = (Spinner) rootView.findViewById(R.id.sched_start_month);        Spinner daySpin1 = (Spinner) rootView.findViewById(R.id.sched_start_day);        Spinner yearSpin2 = (Spinner) rootView.findViewById(R.id.sched_end_year);        Spinner monthSpin2 = (Spinner) rootView.findViewById(R.id.sched_end_month);        Spinner daySpin2 = (Spinner) rootView.findViewById(R.id.sched_end_day);        Log.d("HopGrower", "Year number is: " + year);        Log.d("HopGrower", "Month number is: " + month);        Log.d("HopGrower", "Day number is: " + day);        yearSpin1.setSelection(year);        monthSpin1.setSelection(month);        yearSpin2.setSelection(year);        monthSpin2.setSelection(month);        boolean leapyear = false;        if ((year % 400 == 0) || ((year % 4 == 0) && (year % 100 != 0))) {            leapyear = true;        }        //jan, mar, may, july, aug, oct, dec have 31 days   1,3,5,7,8,10,12        //april, jun, sept, nov have 30   4,6,9,11        //feb 28, leap year in multiples of 4 from 2000  so  (year - 2000) / 4 = whole number, its a leap year        Resources res = this.getResources();        String[] array = res.getStringArray(R.array.recmonthdays);        Log.d("HopGrower", "array length is: " + array.length);        List<String> list = new ArrayList<String>();        list = Arrays.asList(array);        Log.d("HopGrower", "list size is: " + list.size());        ArrayList<String> daylist1 = new ArrayList<String>(list);        Log.d("HopGrower", "daylist1 length is: " + daylist1.size());        adapter1 = new ArrayAdapter<String>(mCtx, android.R.layout.simple_spinner_item, daylist1);        adapter1.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);        daySpin1.setAdapter(adapter1);/*		adapter1 = ArrayAdapter.createFromResource(mCtx,		    R.array.recmonthdays, android.R.layout.simple_spinner_item);		  adapter1.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);		  daySpin1.setAdapter(adapter1);		  	adapter2 = ArrayAdapter.createFromResource(mCtx,		    R.array.recmonthdays, android.R.layout.simple_spinner_item);		  adapter2.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);		  daySpin2.setAdapter(adapter2);*//*		     	CharSequence temp = "31";	    	    if(spindays != 31){    		//then there are either 28,29, or 30 days	    	adapter1.remove(temp);//	    	adapter2.remove(temp);	    		    if(spindays < 30){		    	temp = "30";	    	adapter1.remove(temp);//	    	adapter2.remove(temp);	    		    	    	    	if(leapyear == false){	    		temp = "29";	    		adapter1.remove(temp);//	    		adapter2.remove(temp);	    	}	    }	    	    adapter1.notifyDataSetChanged();//	    adapter2.notifyDataSetChanged();    }*/        Log.d("HopGrower", "Returning view to ScheduleActivity");        return rootView;    }}